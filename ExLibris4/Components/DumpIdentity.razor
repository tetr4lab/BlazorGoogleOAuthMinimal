@using System.Security.Claims

@namespace ExLibris4.Components

@inject IAuthorizationPolicyProvider PolicyProvider
@inject IAuthorizationService AuthService

<p>
    @if (User is not null) {
        @($"Name: {Name}")<br />
        @($"Email: {EmailAddress}")<br />
    } else {
        <span>no identity</span>
    }
</p>

@code {
    [CascadingParameter] protected Task<AuthenticationState> AuthState { get; set; } = null!;
    protected ClaimsPrincipal? User { get; set; }
    protected string? Name { get; set; }
    protected string? EmailAddress { get; set; }
    protected override async Task OnInitializedAsync() {
        await base.OnInitializedAsync();
        User = (AuthState is not null) ? (await AuthState).User : null;
        Name = User?.Identity?.Name;
        if (User?.Identity is ClaimsIdentity claimsIdentity) {
            foreach (var claim in claimsIdentity.Claims) {
                if (claim.Type.EndsWith ("emailaddress")) {
                    EmailAddress = claim.Value;
                    break;
                }
            }
        }
    }

}
